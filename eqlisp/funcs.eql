(defop (take n l) (rec nil n l)
  :aux-args acc param input
  :where
  ((rec acc n nil) acc)
  ((rec acc n (cons x xs))
   (cond
    ((> n 0)  (rec (++ acc (list x)) (- n 1) xs))
    ((<= n 0) acc))))

(defop (drop n l) (rec nil n l)
  :aux-args acc param input
  :where
  ((rec acc n nil) acc)
  ((rec acc n (cons x xs))
   (cond
     ((> n 0) (rec acc (- n 1) xs))
     ((<= n 0) (++ (list x) xs)))))

(defop (identity l) (r nil l) :aux-args acc input
  :where
  ((r acc nil) acc)
  ((r acc (cons x xs)) (r (++ acc (list x)) xs)))

;; 偶数番目だけを取る
(defop (take-even l) (te0 nil l)
  :aux-args acc input
  :where
  ((te0 acc nil)         acc)
  ((te0 acc (cons x xs)) (te1 acc xs))
  ((te1 acc nil)         acc)
  ((te1 acc (cons x xs)) (te0 (++ acc (list x)) xs)))

(defop (reverse l) (rec nil l)
  :aux-args acc input
  :where
  ((rec acc nil)         acc)
  ((rec acc (cons x xs)) (rec (++ (list x) acc) xs)))

;; やや不完全な swap の定義。
;; 0 <= i, j < 入力長 なら、i番目とj番目を入れ替える。
;; i < 0 のときは i = 0 と同じように振る舞う。
;; j < 0 のときは j = 0 と同じように振る舞う。
;; i または j が入力の長さより大きいときは何もしない。
;; 補助関数 g や h の定義における網羅性を欠く部分が
;; 全域性を損なわないことは、ユーザが保証しなければならない。
(defop (swap i j l) (f i j nil nil nil l)
  :aux-args param param acc acc acc input
  :where
  ((f i j pre ith mid nil) pre)
  ((f i j pre ith mid (cons x xs))
   (cond
     ((and (> i 0) (> j 0)) (f (- i 1) (- j 1) (++ pre (list x)) ith mid xs))
     ((and (<= i 0) (> j 0)) (g i (- j 1) pre (++ (list x)) mid xs))
     ((and (> i 0) (<= j 0)) (h (- i 1) j pre (++ (list x)) mid xs))
     ((and (<= i 0) (<= j 0)) (++ pre (list x) xs))
     ))
  ((g i j pre ith mid nil) (++ pre ith mid))
  ((g i j pre ith mid (cons x xs))
   (cond
     ((and (<= i 0) (> j 0)) (g i (- j 1) pre ith (++ mid (list x)) xs))
     ((and (<= i 0) (<= j 0)) (++ pre (list x) mid ith xs))
     ;; 網羅的でない
     ))
  ((h i j pre jth mid nil) (++ pre jth mid))
  ((h i j pre jth mid (cons x xs))
   (cond
     ((and (<= j 0) (> i 0)) (h (- i 1) j pre jth (++ mid (list x)) xs))
     ((and (<= j 0) (<= i 0)) (++ pre (list x) mid jth xs))
     ;; 網羅的でない
     ))
  )
